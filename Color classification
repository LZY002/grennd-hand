package leetcode;
	/**
	 * @author LI
	   @version 给定一个包含红色、白色和蓝色，一共 n 个元素的数组，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。
               此题中，我们使用整数 0、 1 和 2 分别表示红色、白色和蓝色。
	 */ 
class Solution {
    public void sortColors(int[] nums) {
        int zero = -1; //从zero+1开始设为白色的起点
        int two = nums.length; // 从two--开始设置为蓝色的终点
        for(int i = 0; i < two;){
            // 前面肯定是白色或者蓝色，所以i++;
	    if(nums[i] == 0){
             swap(nums, i++, ++zero); // 先把i传进到swap函数，在i=i+1   先zero+1，再传进入函数内
            else if(nums[i] == 2){
                swap(nums, i, --two);
            }
            else{
                i++;
            }
        }
    }
    public void swap(int[] nums, int a, int b){
        int temp = nums[b];
        nums[b] = nums[a];
        nums[a] = temp;
    }
}
